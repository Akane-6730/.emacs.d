;;; init.el --- The main entry point of the configuration -*- lexical-binding: t; -*-

;;; Commentary:
;;
;; This file is the main entry point for the Emacs configuration.
;; It sets up the core environment, optimizes startup performance,
;; and loads various configuration modules in a structured manner.
;;
;;; Code:

;;----------------------------------------------------------------------------
;; Core Setup
;;----------------------------------------------------------------------------

;; Optimize Garbage Collection for Startup
(setq gc-cons-threshold most-positive-fixnum)

;; Optimize `auto-mode-alist`
(setq auto-mode-case-fold nil)

;; Add our `lisp' directory to the `load-path'. This must be done first,
;; so Emacs knows where to find our custom modules.
(add-to-list 'load-path (expand-file-name "lisp" user-emacs-directory))

;; A clever optimization for startup performance.
;; `file-name-handler-alist' can be slow as it's consulted for every file
;; load. We disable it during startup and restore it once everything is loaded.
(let ((old-file-name-handler-alist file-name-handler-alist))
  (setq file-name-handler-alist nil)
  (add-hook 'emacs-startup-hook
            (lambda ()
              (setq file-name-handler-alist old-file-name-handler-alist))
            ;; Use a priority of 101 to ensure it runs after other startup tasks.
            101))

;;----------------------------------------------------------------------------
;; Module Loading
;;----------------------------------------------------------------------------

;; -- 1. Foundational Modules --
(require 'init-package)

(require 'init-base)        ; Basic editor settings (encoding, backups, etc.).
(require 'init-ui)          ; Theme, fonts, modeline, and other visuals.
(require 'init-kbd)         ; Keybindings.

;; -- 2. Core Editing Experience --
(require 'init-edit)        ; Editing enhancements (paredit, highlighting, etc.).
(require 'init-completion)  ; The completion framework (e.g., Vertico).
(require 'init-highlight)
(require 'init-snippet)
(require 'init-spell)

;; -- 3. Tools and UI enhancements --
(require 'init-vcs)         ; Version control (Magit).
(require 'init-ibuffer)
(require 'init-dashboard)   ; Startup dashboard.
(require 'init-dired)       ; File manager enhancements.
(require 'init-shell)       ; Eshell configuration.
(require 'init-window)      ; Window management commands.
(require 'init-treemacs)
(require 'init-utils)

;; -- 4. Programming Language Support --
(require 'init-prog)      ; General programming settings
(require 'init-lsp)       ; Language Server Protocol (LSP) support.
(require 'init-check)     ; Syntax checking (Flycheck).
(require 'init-dape)      ; Debug Adapter Protocol (DAP) support.
(require 'init-c)         ; C/C++ specific settings

;; Org mode
(require 'init-org)
;; AI Integration
(require 'init-ai)
;; Misc
(require 'init-reader)

;; Load custom settings generated by the Customize interface.
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(and (file-readable-p custom-file) (load custom-file))

;;; init.el ends here
